
require 'fibonacci_sequence_generator'

class Problem2

	def initialize(fibonacciSequenceGenerator = FibonacciSequenceGenerator.new)
		@fibonacciSequenceGenerator = fibonacciSequenceGenerator
	end

	def GetSumOfEvenValuedTermsOfFibonacciSequence(limit)
		sum = 0

		fibonacciSequence = @fibonacciSequenceGenerator.Generate(limit)

		fibonacciSequence.each { |element|
			if element % 2 == 0 then
				sum += element
			end
		}

		return sum
	end

end

# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
if __FILE__ == $0 then
	puts Problem2.new.GetSumOfEvenValuedTermsOfFibonacciSequence(4000000)
end
